<aQuery>
    <region name="Global"/>
    <query title="aggregated land allocation">
        <axis1 name="LandLeaf">LandLeaf[@crop]</axis1>
        <axis2 name="Year">land-allocation[@year]</axis2>
        <xPath buildList="true" dataName="LandLeaf" group="false" sumAll="false">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//land-allocation/text()</xPath>
        <comments/>
        <labelRewriteList append-values="false">
            <level name="LandLeaf">
                <rewrite from="Grassland" to="grass"/>
                <rewrite from="ProtectedUnmanagedPasture" to="pasture (other)"/>
                <rewrite from="Vegetables" to="crops"/>
                <rewrite from="FodderHerb" to="crops"/>
                <rewrite from="MiscCrop" to="crops"/>
                <rewrite from="OtherGrainC4" to="crops"/>
                <rewrite from="PalmFruit" to="crops"/>
                <rewrite from="FiberCrop" to="crops"/>
                <rewrite from="NutsSeeds" to="crops"/>
                <rewrite from="OtherGrain" to="crops"/>
                <rewrite from="Soybean" to="crops"/>
                <rewrite from="FodderGrass" to="crops"/>
                <rewrite from="ProtectedGrassland" to="grass"/>
                <rewrite from="Fruits" to="crops"/>
                <rewrite from="FodderHerbC4" to="crops"/>
                <rewrite from="ProtectedUnmanagedForest" to="forest (unmanaged)"/>
                <rewrite from="biomassTree" to="biomass"/>
                <rewrite from="OilPalm" to="crops"/>
                <rewrite from="OtherArableLand" to="otherarable"/>
                <rewrite from="MiscCropTree" to="crops"/>
                <rewrite from="OilPalmTree" to="crops"/>
                <rewrite from="Rice" to="crops"/>
                <rewrite from="Legumes" to="crops"/>
                <rewrite from="NutsSeedsTree" to="crops"/>
                <rewrite from="OilCropTree" to="crops"/>
                <rewrite from="UrbanLand" to="urban"/>
                <rewrite from="RockIceDesert" to="rock and desert"/>
                <rewrite from="RootTuber" to="crops"/>
                <rewrite from="Corn" to="crops"/>
                <rewrite from="FruitsTree" to="crops"/>
                <rewrite from="OilCrop" to="crops"/>
                <rewrite from="ProtectedShrubland" to="shrubs"/>
                <rewrite from="SugarCrop" to="crops"/>
                <rewrite from="UnmanagedForest" to="forest (unmanaged)"/>
                <rewrite from="SugarCropC4" to="crops"/>
                <rewrite from="Pasture" to="pasture (grazed)"/>
                <rewrite from="Forest" to="forest (managed)"/>
                <rewrite from="biomassGrass" to="biomass"/>
                <rewrite from="Shrubland" to="shrubs"/>
                <rewrite from="UnmanagedPasture" to="pasture (other)"/>
                <rewrite from="Tundra" to="tundra"/>
                <rewrite from="Wheat" to="crops"/>
                <rewrite from="CornC4" to="crops"/>
            </level>
        </labelRewriteList>
    </query>
</aQuery>
<aQuery>
    <region name="Global"/>
    <supplyDemandQuery title="fertilizer consumption by crop type">
        <axis1 name="sector">sector</axis1>
        <axis2 name="Year">demand-physical[@vintage]</axis2>
        <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and not (@name='Exports_N fertilizer')]//
   *[@type='input' and (@name='N fertilizer')]/demand-physical/node()</xPath>
        <comments/>
    </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name="Global"/>
    <supplyDemandQuery title="food consumption by type (specific)">
        <axis1 name="technology">technology</axis1>
        <axis2 name="Year">physical-output[@vintage]</axis2>
        <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' (:collapse:) and (@name='FoodDemand_Staples' or @name='FoodDemand_NonStaples')]//
    *[@type='subsector']//*[@type='technology']/
    *[@type='output' (:collapse:)]/physical-output/node()</xPath>
        <comments/>
    </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name="Global"/>
    <supplyDemandQuery title="ag regional prices (weighted average b/t domestic and imported prices)">
        <axis1 name="sector">sector</axis1>
        <axis2 name="Year">cost</axis2>
        <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and contains(@name, 'regional')]/cost[@unit='1975$/kg' or @unit='1975$/m3']/text()</xPath>
        <comments/>
    </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name="Global"/>
        <marketQuery title="CO2 prices">
            <axis1 name="market">market</axis1>
            <axis2 name="Year">market</axis2>
            <xPath buildList="true" dataName="price" group="false" sumAll="false">Marketplace/market[true() and contains(@name,'CO2')]/price/node()</xPath>
            <comments/>
        </marketQuery>
</aQuery>
<aQuery>
    <region name="Global"/>
         <supplyDemandQuery title="food demand per capita">
            <axis1 name="input">input[@name]</axis1>
            <axis2 name="Year">demand-percap[@year]</axis2>
            <xPath buildList="true" dataName="demand per cap" group="false" sumAll="false">gcam-consumer[@name='FoodDemand']//*[@type='input']/demand-percap/node()</xPath>
            <comments/>
        </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name="Global"/>
        <supplyDemandQuery title="food demand prices">
            <axis1 name="input">input[@name]</axis1>
            <axis2 name="Year">price-paid[@vintage]</axis2>
            <xPath buildList="true" dataName="price" group="false" sumAll="false">gcam-consumer[@name='FoodDemand']//*[@type='input']/price-paid/node()</xPath>
            <comments/>
        </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name="Global"/>
        <gdpQueryBuilder title="GDP per capita PPP by region">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">nationalAccount[@year]</axis2>
            <xPath buildList="true" dataName="gdp-per-capita-ppp" group="false" sumAll="false">nationalAccount/account[@name = 'gdp-per-capita-ppp']/node()</xPath>
            <comments/>
        </gdpQueryBuilder>
</aQuery>
<aQuery>
    <region name="Global"/>
        <emissionsQueryBuilder title="CO2 emissions by region">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">emissions</axis2>
            <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'sector' (:collapse:) or @type = 'resource' (:collapse:)](: / *[@type = 'subresource' (: collapse :)] :)//*[((@name='CO2' or @name = 'CO2_FUG'))]/emissions/node()</xPath>
            <comments/>
        </emissionsQueryBuilder>
</aQuery>
<aQuery>
    <region name="Global"/>
        <emissionsQueryBuilder title="CO2 emissions by sector (excluding resource production)">
            <axis1 name="sector">sector</axis1>
            <axis2 name="Year">emissions</axis2>
            <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type='sector']//CO2/emissions/node()</xPath>
            <comments/>
        </emissionsQueryBuilder>
</aQuery>
<aQuery>
    <region name="Global"/>
        <emissionsQueryBuilder title="CO2 emissions by resource production ">
            <axis1 name="GHG">GHG</axis1>
            <axis2 name="Year">emissions</axis2>
            <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'resource']//*[@type = 'GHG' and (@name = "CO2" or @name = "CO2_FUG")]/emissions/node()</xPath>
            <labelRewriteList append-values="false">
                <level name="GHG">
                    <rewrite from="CO2_FUG" to="CO2"/>
                </level>
            </labelRewriteList>
            <comments/>
        </emissionsQueryBuilder>
</aQuery>
<aQuery>
    <region name="Global"/>
            <emissionsQueryBuilder title="nonCO2 emissions by tech (excluding resource production)">
                <axis1 name="GHG">GHG</axis1>
                <axis2 name="Year">emissions</axis2>
                <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'sector']/*[@type = 'subsector']/*[@type = 'technology']/
            *[@type = 'GHG' and @name != 'CO2' and @name != 'CO2_FUG']/emissions/node()</xPath>
                <comments/>
            </emissionsQueryBuilder>
</aQuery>
<aQuery>
    <region name = "Global"/>
    <demographicsQuery title="population by region">
        <axis1 name="region">region</axis1>
        <axis2 name="Year">populationMiniCAM</axis2>
        <xPath buildList="true" dataName="total-population" group="false" sumAll="false">demographics/populationMiniCAM/total-population/node()</xPath>
        <comments/>
    </demographicsQuery>
</aQuery>
<aQuery>
    <region name = "Global"/>
    <supplyDemandQuery title="food consumption by type (specific)">
        <axis1 name="technology">technology</axis1>
        <axis2 name="Year">physical-output[@vintage]</axis2>
        <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' (:collapse:) and (@name='FoodDemand_Staples' or @name='FoodDemand_NonStaples')]//
    *[@type='subsector']//*[@type='technology']/
    *[@type='output' (:collapse:)]/physical-output/node()</xPath>
        <comments/>
    </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name = "Global"/>
    <query title="detailed land allocation">
        <axis1 name="LandLeaf">LandLeaf[@name]</axis1>
        <axis2 name="Year">land-allocation[@year]</axis2>
        <xPath buildList="true" dataName="LandLeaf" group="false" sumAll="false">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//land-allocation/text()</xPath>
        <comments/>
    </query>
</aQuery>
<aQuery>
    <region name = "Global"/>
    <query title="LUC emissions by LUT">
        <axis1 name="LandLeaf">LandLeaf</axis1>
        <axis2 name="Year">land-use-change-emission[@year]</axis2>
        <xPath buildList="true" dataName="land-use-change-emission" group="false" sumAll="false">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//
        land-use-change-emission[@year&gt;1970]/text()</xPath>
        <comments/>
    </query>
</aQuery>
<aQuery>
    <region name = "Global"/>
    <query title="profit rate">
        <axis1 name="LandLeaf">LandLeaf</axis1>
        <axis2 name="Year">profit-rate[@year]</axis2>
        <xPath buildList="true" dataName="profit-rate" group="false" sumAll="false">/LandNode[@name='root' or @type='LandNode' (:collapse:)]//profit-rate/text()</xPath>
        <comments/>
    </query>
</aQuery>
<aQuery>
    <region name = "Global"/>
    <supplyDemandQuery title="ag tech yield">
                    <axis1 name="technology">technology</axis1>
                    <axis2 name="Year">technology</axis2>
                    <xPath buildList="true" dataName="yield" group="false" sumAll="false">*[@type='sector' and (local-name()='AgSupplySector')]/
            *[@type='subsector']/*[@type='technology']/yield/text()</xPath>
                    <comments/>
                </supplyDemandQuery>
</aQuery>
<aQuery>
    <region name = "Global"/>
<supplyDemandQuery title="final energy consumption by sector and fuel">
                    <axis1 name="input">input</axis1>
                    <axis2 name="Year">demand-physical[@vintage]</axis2>
                    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and ((@name='building' or @name='industry' or @name='transportation') or
            (exists(child::keyword/@final-energy)))]//*[@type='input' and
            not(@name='limestone' or @name='process heat cement' or @name='process heat food processing' or @name='industrial energy use' or @name='process heat paper' or @name='waste biomass for paper' or
                @name='industrial feedstocks' or @name='renewable' or contains(@name, 'trn_') or @name='oil-credits')]/
            demand-physical[@unit='EJ']/node()</xPath>
                    <comments/>
                    <labelRewriteList append-values="false">
                        <level name="input">
                            <rewrite from="elect_td_bld" to="electricity"/>
                            <rewrite from="regional coal" to="coal"/>
                            <rewrite from="H2 industrial" to="hydrogen"/>
                            <rewrite from="refined liquids enduse" to="refined liquids"/>
                            <rewrite from="elect_td_trn" to="electricity"/>
                            <rewrite from="delivered coal" to="coal"/>
                            <rewrite from="delivered gas" to="gas"/>
                            <rewrite from="wholesale gas" to="gas"/>
                            <rewrite from="H2 wholesale dispensing" to="hydrogen"/>
                            <rewrite from="H2 retail dispensing" to="hydrogen"/>
                            <rewrite from="regional biomass" to="biomass"/>
                            <rewrite from="H2 retail delivery" to="hydrogen"/>
                            <rewrite from="elect_td_ind" to="electricity"/>
                            <rewrite from="delivered biomass" to="biomass"/>
                            <rewrite from="refined liquids industrial" to="refined liquids"/>
                            <rewrite from="H2 wholesale delivery" to="hydrogen"/>
			    <rewrite from="global solar resource" to="solar"/>
			    <rewrite from="regional woodpulp for energy" to="biomass"/>
                        </level>
                    </labelRewriteList>
                </supplyDemandQuery>
</aQuery>
<aQuery>
<region name = "Global"/>
<supplyDemandQuery title="ammonia production by tech">
                        <axis1 name="technology">technology</axis1>
                        <axis2 name="Year">physical-output[@vintage]</axis2>
                        <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' and (@name='ammonia')]/
               *[@type='subsector']/*[@type='technology']/
               *[@type='output']/physical-output/node()</xPath>
                        <comments/>
                    </supplyDemandQuery>
</aQuery>
<aQuery>
<region name = "Global"/>
<supplyDemandQuery title="primary energy consumption by region (direct equivalent)">
                <axis1 name="fuel">input[@name]</axis1>
                <axis2 name="Year">demand-physical[@vintage]</axis2>
                <xPath buildList="true" dataName="input" group="false" sumAll="false"><![CDATA[

			 	 	 declare function local:append-heirarchy($parent as node(), $append as node()) as node() {
			 	 		 let $scn := $parent/ancestor::scenario,
			 			   	  $rgn := $parent/ancestor::region
			 			   return
			 			   	  document { element scenario {
			 			 	  					$scn/@*,
			 			 						element region {
			 			 							$rgn/@*,
			 			 							$append
			 			 						}
			 			 	  				}
			 				}
			 	 	 };
			 	 	 declare function local:get-primary-renewable($outputs as node()*) as node()* {
			 	 	 unordered {
			 	 	 for $output in $outputs
			 	 	 let $new_output :=
			 	 	 element input {
			 	 		 attribute type {'input'},
			 	 		 attribute name {$output/parent::*/following-sibling::keyword/@primary-renewable},
			 	 		 element demand-physical {
			 	 			 attribute vintage {$output/@vintage},
			 	 			 attribute unit {$output/@unit},
			 	 			 text { $output }
			 	 		 }
			 	 	 },
			 	 	 $new_root := local:append-heirarchy($output/parent::*/parent::*, $new_output)
			 	 	 return $new_root//text()
			 	 	 }
			 	 	 };
			 	 	 declare function local:run-primary-energy($scenarios as xs:string*, $regions as xs:string*, $collection as xs:string) as node()* {
			 	 	 let $regionsG := if(not($regions[1] = 'Global'))
			 	 	 		  then $regions
			 	 	 		  else distinct-values(collection($collection)/scenario/world/*[@type='region']/@name)
			 	 	 return
			 	 	 for $scenario in $scenarios,
			 	 	 $region in $regionsG
			 	 	 let $scenario_split := tokenize($scenario, ' '),
                     $scenario_name := string-join($scenario_split[position() < last()], ' '),
			 	 	 $scenario_date := $scenario_split[last()],
			 	 	 $currTree := collection($collection)/scenario[@name = $scenario_name and @date = $scenario_date]/world/*[@type = 'region' and @name=$region]
			 	 	 return (: get renewables from electricity :)
					 	 	 	local:get-primary-renewable($currTree/*[@type='sector' (: collapse :) and (@name='electricity' or @name='elect_td_bld' or starts-with(@name,'elec_'))]//keyword[fn:exists(@primary-renewable)]/preceding-sibling::output-primary/physical-output)
					 		 	| (: get renewables from H2ProdCS :)
					 	 	 	local:get-primary-renewable($currTree/supplysector[@name='H2 central production'](: /*[@type='subsector' (: collapse :) and fn:not(@name='electrolysis')] :)//keyword[fn:exists(@primary-renewable)]/preceding-sibling::output-primary/physical-output)
					 	 	 	| (: get renewables from H2ProdDist :)
					 	 	 	local:get-primary-renewable($currTree/supplysector[@name='H2 forecourt production'](: /*[@type='subsector' (: collapse :) and fn:not(@name='electrolysis')] :)//keyword[fn:exists(@primary-renewable)]/preceding-sibling::output-primary/physical-output)
					 	 	 	| (: get the primaries :)
	 	 						$currTree//keyword[fn:exists(@primary-consumption)]/preceding-sibling::*[@type='input']/demand-physical/text()
                                | (: get traditional biomass :)
							    $currTree//*[@type='input' and @name='traditional biomass']/demand-physical/node()

	 	 };
            	 local:run-primary-energy((:scenarios:), (:regions:), (:collection:))


                ]]></xPath>
                <comments/>
                <labelRewriteList append-values="false">
                    <level name="input">
                        <rewrite from="water_td_pri_C" to=""/>
                        <rewrite from="H2 industrial" to=""/>
                        <rewrite from="traded RUS pipeline gas" to="b natural gas"/>
                        <rewrite from="traditional biomass" to="j traditional biomass"/>
                        <rewrite from="regional corn for ethanol" to="d biomass"/>
                        <rewrite from="regional biomassOil" to="d biomass"/>
                        <rewrite from="traded N.Amer pipeline gas" to="b natural gas"/>
                        <rewrite from="traded LNG" to="b natural gas"/>
                        <rewrite from="traded coal" to="c coal"/>
                        <rewrite from="solar-elect" to="h solar"/>
                        <rewrite from="seawater" to=""/>
                        <rewrite from="elect_td_ind" to=""/>
                        <rewrite from="traded EUR pipeline gas" to="b natural gas"/>
                        <rewrite from="water_td_pri_W" to=""/>
                        <rewrite from="total biomass" to="d biomass"/>
                        <rewrite from="nuclear-H2" to="e nuclear"/>
                        <rewrite from="traded oil" to="a oil"/>
                        <rewrite from="k new" to="k new"/>
                        <rewrite from="exotic-elect" to="j breakthrough"/>
                        <rewrite from="wind-H2" to="g wind"/>
                        <rewrite from="biomass" to="d biomass"/>
                        <rewrite from="woodpulp_energy" to="d biomass"/>
                        <rewrite from="crude oil" to="a oil"/>
                        <rewrite from="nuclear-elect" to="e nuclear"/>
                        <rewrite from="solar-H2" to="h solar"/>
                        <rewrite from="regional natural gas" to=""/>
                        <rewrite from="traded unconventional oil" to="a oil"/>
                        <rewrite from="traded PAC pipeline gas" to="b natural gas"/>
                        <rewrite from="geothermal-elect" to="i geothermal"/>
                        <rewrite from="traded Afr_MidE pipeline gas" to="b natural gas"/>
                        <rewrite from="natural gas" to="b natural gas"/>
                        <rewrite from="wholesale gas" to=""/>
                        <rewrite from="traded natural gas" to="b natural gas"/>
                        <rewrite from="hydro-elect" to="f hydro"/>
                        <rewrite from="regional biomass" to="d biomass"/>
                        <rewrite from="coal" to="c coal"/>
                        <rewrite from="wind-elect" to="g wind"/>
                        <rewrite from="traded LA pipeline gas" to="b natural gas"/>
                    </level>
                </labelRewriteList>
            </supplyDemandQuery>
</aQuery>

